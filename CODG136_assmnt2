
<!DOCTYPE html>

<!-- Assignment 2: Submitted by Tony Tang, Course: CODG136 WEB MAPPING --> 
<!-- The following map is that of the City of Toronto. The user is able to turn on and off the Neighbourhood Boundary layers as well as
Hover over each Neighbourhood Boundary which will display the name of the selected neighbourhood in the form of a pop up.  The Popup function compliments the Neighbourhood GeoJson Layer as no clicking is required saving the user an extra step, making the map more user friendly. --> 

<html>
<head>
 

<!--title-->
<title>TORONTO NEIGHBOURHOODS (CODG136 - Assignment 2) </title>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0">
 

<!--Link to Leaflet CSS document-->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.2.0/dist/leaflet.css" />
<!--Link to Leaflet JS API-->
<script src="https://unpkg.com/leaflet@1.2.0/dist/leaflet.js"></script>

<!-- Link to jQuery Toolkit-->
<script src="https://code.jquery.com/jquery-3.2.1.js"></script>
    
<!--Styling document elements, declaring the map to fill the entire page within another container at a reduced margin-->
<style type="text/css">
html { 
    height: 100% 
}
body { 
    height: 100%; 
    margin: 0; 
    padding: 0 
}
#mainContainer{ 
    width: 100%;
    height: 100%;
    margin: auto; 
}
#mapid { 
    width: 100%; 
    height: 100%
}

    section {
        position: absolute;
        top: 500px;
        right: 50px;
        width: 300px;
        margin: 20px auto;
        padding: 0 15px;
        background: rgba(256, 256, 256, 0.5);
        border: 1.5px solid grey;
        border-radius: 10px;
        z-index: 800;
    }
       
    p {
        font-family: Arial, Helvetica, sans-serif;
        font-size: 0.75em;
        line-height: 1.0em;
    }

    @media screen and (max-width:768px) {

        body {
          overflow: hidden
        }            

        section {
          width: 70%;
          bottom:15px;
          max-height:425px;
          overflow: auto;
        }
    }        
</style>
</head>


<body>
 
 <section>

<!--A small blurb about the maps purpose and also an Welcome text box.-->
    <div id="HoodContent">    
        <h2><p>Toronto Neighbourhoods</p></h2>

        <p><b>Toronto has always been a city of neighbourhoods, see for yourself and let the journey begin.</b></p>

        <p>Hover over and click the Neighbourhood for the names of each Neighbourhood.</p>

    </div>
</section>

<!--Declare div container that only fills 80% width and height of the browser window-->
<div id="mainContainer"> 

	<!--Declare map div container to place the map inside on the page-->
	<div id="mapid"></div>

</div>

<!--Javascript map functions-->
<script>

// This function opens the map at the location specified below zoomed in at 11.5
var map = L.map('mapid').setView([43.723308, -79.328941], 11.5); 
 
// This fuction customizes the map with tiles from https://leaflet-extras.github.io/leaflet-providers/preview/
L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {
maxZoom: 25,
attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, Tiles courtesy of <a href="http://hot.openstreetmap.org/" target="_blank">Humanitarian OpenStreetMap Team</a>',
layers: [Neighbourhoods]
}).addTo(map);


//this shows a popup with the neighbourhood names when the mouse hovers over the polygons in desktop mode, while Mobile mode users will still need to tap the neighbourhood to reveal the name of chosen neighbourghood.  Previous version users had to click GeoJson Layer to activate popup function, in Desktop mode. Additionally a link function has been placed on the Name of the neighbourhood popup.
function onEachFeature(feature, layer) {
		var popup = feature.properties.HOOD;
		if (feature.properties && feature.properties.HOOD) {
                layer.bindPopup("<a href='" + feature.properties.HOOD + "'>" + feature.properties.HOOD + "</a>", {closeButton: false, offset: L.point(0, -50)});
                layer.on('mouseover', function() { layer.openPopup(); });
                layer.on('mouseout', function() { layer.closePopup(); });
            }
        }; 

// declaring the Toronto Neighbourhoods Boundary layer    
var Neighbourhoods = L.layerGroup();

// This loads the GeoJSON map data file from Github User - adamw523 (Link: https://github.com/adamw523)
// using the jQuery getJSON() method. 
$.getJSON('https://raw.githubusercontent.com/adamw523/toronto-geojson/master/simple.geojson', function(json) {

Neighbourhoods = L.geoJson(json, {

// this CSS function customizes the appearance of the Neighbourhood Boundary Polygons
style:{
"font-family": "Arial, Helvetica, sans-serif",
"color": "#386E9B",
"weight": 1.5,
 "opacity": 0.95,
},

onEachFeature: onEachFeature

}).addTo(Neighbourhoods);

});	 

// this identifies the options for selection in the control layer on the top right corner of the map.
var HOODTOGGLE = {
		"TORONTO NEIGHBOURHOODS": Neighbourhoods

};

// this code creates the control toggle located on the top right corner of the map, 'null' placement prior to 'HOODTOGGLE' will identify 'HOODTOGGLE' var as an Overlay and not Base, Thank you for this tip.
L.control.layers(null, HOODTOGGLE).addTo(map);
</script>


</body>
</html>
